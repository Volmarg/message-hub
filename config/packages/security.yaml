security:
    enable_authenticator_manager: true

    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api/external
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /api/external/auth/login
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            entry_point: lexik_jwt_authentication.jwt_token_authenticator
            guard:
                authenticators:
                    - 'App\Security\LexitBundleJwtTokenAuthenticator'
        main:
            login_throttling:
                limiter: app.login_rate_limiter
            lazy: true
            provider: app_user_provider
            logout:
                path: /logout
                target: /login
                invalidate_session: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/external/.*, role: IS_AUTHENTICATED_ANONYMOUSLY} # todo: some very simple auth for api (?)
        - { path: ^/.*, role: ROLE_SUPER_ADMIN }